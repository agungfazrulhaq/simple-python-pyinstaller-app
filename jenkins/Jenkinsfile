node {
        checkout scm
        stage('Build') {
            docker.image('python:3.12.1-alpine3.19').inside {
                sh 'python -m py_compile sources/add2vals.py sources/calc.py'
                stash name: 'compiled-results', includes: 'sources/*.py*'
            }
        }

        stage('Test') {
            try {
	             docker.image('qnib/pytest').inside {
                    sh 'py.test --junit-xml test-reports/results.xml sources/test_calc.py'
                }
            } catch (e) {
                    echo "Test Stage Failed!"
            } finally {
                junit 'test-reports/results.xml'
            }
        }

        stage('Manual Approval') {
            input message: 'Proceed to deploy stage?', ok: 'Yes'
        }

        stage('Deploy') {
            env.VOLUME = "${pwd()}/sources:/src"
            env.IMAGE = 'cdrx/pyinstaller-linux:python2'

            dir("${env.BUILD_ID}") {
                unstash 'compiled-results'
                sh "docker run --rm -v ${env.VOLUME} ${env.IMAGE} 'pyinstaller -F add2vals.py'"
            }

            archiveArtifacts "sources/dist/add2vals"
            sleep 60
        }
}
